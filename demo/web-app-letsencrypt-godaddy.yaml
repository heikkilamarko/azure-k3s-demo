apiVersion: v1
kind: Secret
metadata:
  name: godaddy-api-key
type: Opaque
stringData:
  token: ${GODADDY_APIKEY}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging-godaddy
spec:
  acme:
    email: ${ACME_EMAIL}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-staging-godaddy-account-key
    solvers:
      - dns01:
          webhook:
            config:
              apiKeySecretRef:
                name: godaddy-api-key
                key: token
              production: true
              ttl: 600
            groupName: acme.${INGRESS_HOST}
            solverName: godaddy
# ---
# apiVersion: cert-manager.io/v1
# kind: ClusterIssuer
# metadata:
#   name: letsencrypt-production-godaddy
# spec:
#   acme:
#     email: ${ACME_EMAIL}
#     server: https://acme-v02.api.letsencrypt.org/directory
#     privateKeySecretRef:
#       name: letsencrypt-production-godaddy-account-key
#     solvers:
#       - dns01:
#           webhook:
#             config:
#               apiKeySecretRef:
#                 name: godaddy-api-key
#                 key: token
#               production: true
#               ttl: 600
#             groupName: acme.${INGRESS_HOST}
#             solverName: godaddy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      containers:
        - name: web-app
          image: nginx:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: web-app
spec:
  selector:
    app: web-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-app
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging-godaddy
    # cert-manager.io/cluster-issuer: letsencrypt-production-godaddy
spec:
  tls:
    - hosts:
        - "*.${INGRESS_HOST}"
      secretName: web-app-letsencrypt-staging-godaddy-tls
      # secretName: web-app-letsencrypt-production-godaddy-tls
  rules:
    - host: www.${INGRESS_HOST}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-app
                port:
                  number: 80
